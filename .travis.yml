sudo: false
language: cpp

git:
  depth: 10000

env:
  global:
    MAKEFLAGS='-j 4'

# NOTE: the following combinations give many false positives:
# - openmpi-bin + valgrind on precise
# - mpich-3.2 + valgrind-3.12.0 on xcode7.3

addons:
  apt:
    packages:
      - libgmp-dev
      - zlib1g-dev

# NOTE: It is best to cache ./texlive for doc-release:
#   cache:
#     directories:
#       - texlive
before_install:
  - |
    if [ "x$TRAVIS_OS_NAME" = xlinux ]; then
      case $CI_TARGET in
        *doc*)
          if [ ! -e ./texlive/bin/`uname -m`-linux/tlmgr ]; then
            wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz -O - | tar -x --gzip
            echo "
            selected_scheme scheme-minimal
            TEXDIR ./texlive
            TEXMFCONFIG ~/.texlive2016/texmf-config
            TEXMFHOME ~/texmf
            TEXMFLOCAL ./texlive/texmf-local
            TEXMFSYSCONFIG ./texlive/texmf-config
            TEXMFSYSVAR ./texlive/texmf-var
            TEXMFVAR ~/.texlive2016/texmf-var
            collection-fontsrecommended 1
            collection-latex 1
            option_doc 0
            option_src 0
            " | sed -e 's/^ *//' >texlive.profile
            ./install-tl-20*/install-tl --profile texlive.profile
          fi
          export PATH=`pwd`/texlive/bin/`uname -m`-linux:$PATH
          ;;
      esac
    fi
    if [ "x$TRAVIS_OS_NAME" = xosx ]; then
      case $CI_TARGET in
        *parform*|*parvorm*)
          brew update
          brew install mpich
          ;;
      esac
      case $CI_TARGET in
        *valgrind*)
          brew update
          # valgrind 3.11.0
          brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/7a4dabfc1a2acd9f01a1670fde4f0094c4fb6ffa/Formula/valgrind.rb
          ;;
      esac
    fi

script:
  - ./scripts/travis-script.sh

matrix:
  include:
    - os: linux
      compiler: gcc
      env: CI_TARGET=form
    - os: linux
      compiler: gcc
      env: CI_TARGET=tform
    - os: linux
      compiler: gcc
      env: CI_TARGET=parform
      addons: { apt: { packages: [ libgmp-dev, libopenmpi-dev, openmpi-bin, zlib1g-dev ] } }
    - os: osx
      compiler: clang
      env: CI_TARGET=form
    - os: osx
      compiler: clang
      env: CI_TARGET=tform
    - os: osx
      compiler: clang
      env: CI_TARGET=parform
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-vorm TEST=examples.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-vorm TEST=features.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-vorm TEST=fixes.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-tvorm TEST=examples.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-tvorm TEST=features.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: linux
      compiler: gcc
      env: CI_TARGET=valgrind-tvorm TEST=fixes.frm
      addons: { apt: { packages: [ libgmp-dev, valgrind, zlib1g-dev ] } }
    - os: osx
      compiler: gcc
      env: CI_TARGET=valgrind-parvorm TEST=examples.frm
    - os: osx
      compiler: gcc
      env: CI_TARGET=valgrind-parvorm TEST=features.frm
    - os: osx
      compiler: gcc
      env: CI_TARGET=valgrind-parvorm TEST=fixes.frm
    - os: linux
      env: CI_TARGET=src-release
    - os: linux
      env: CI_TARGET=doc-release
      cache: { directories: [ texlive ] }
    - os: linux
      compiler: gcc
      env: CI_TARGET=bin-release
    - os: osx
      compiler: clang
      env: CI_TARGET=bin-release

# NOTE: $GITHUB_TOKEN is given as an encrypted environment variable.
deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file_glob: true
  file:
    - "form-*.tar.gz"
    - "form-*.pdf"
  skip_cleanup: true
  overwrite: true
  on:
    tags: true
    condition: "( $TRAVIS_SECURE_ENV_VARS == true ) && ( $CI_TARGET == *release )"

notifications:
  email: false
